# Resultados de bajada
cat("\nEstadísticas de Velocidad de Bajada:\n")
cat("Media:", media_bajada, "\n")
cat("Moda:", moda_bajada, "\n")
cat("Desviación estándar:", desviacion_bajada, "\n")
}
plt_subida
plt_bajada
library(ggplot2)
library(dplyr)
library(tidyr)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
# Leer los datos del archivo resultados.csv
data <- read.csv("resultados.csv")
velocidad_subida <- data$up
velocidad_bajada <- data$down
# Cálculos estadísticos de subida
media_subida <- mean(velocidad_subida, na.rm = TRUE)
moda_subida <- Mode(velocidad_subida)
desviacion_subida <- sd(velocidad_subida, na.rm = TRUE)
# Rangos de velocidad de subida
rango_min_subida <- floor(min(velocidad_subida) / 10) * 10
rango_max_subida <- ceiling(max(velocidad_subida) / 10) * 10
rangos_subida <- seq(rango_min_subida, rango_max_subida, by = 10)
# Tabla de frecuencia de velocidad de subida
tabla_subida <- data.frame(Rango_de_Velocidad = cut(velocidad_subida, breaks = rangos_subida, include.lowest = TRUE)) %>%
count(Rango_de_Velocidad) %>%
arrange(Rango_de_Velocidad) %>%
rename(Frecuencia = n) %>%
mutate(Frecuencia_Relativa = Frecuencia / sum(Frecuencia),
Frecuencia_Acumulada = cumsum(Frecuencia))
# Convertir los intervalos de subida a formato de cadena
tabla_subida$Rango_de_Velocidad <- as.character(tabla_subida$Rango_de_Velocidad)
# Gráfica de frecuencia de velocidad de subida
plt_subida <- ggplot(tabla_subida, aes(x = Rango_de_Velocidad, y = Frecuencia)) +
geom_bar(stat = "identity", width = 0.8) +
labs(x = "Rango de Velocidad de subida (Mbps)", y = "Frecuencia", title = "Frecuencia de Velocidad de Subida") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
coord_flip()
# Resultados de subida
cat("Estadísticas de Velocidad de Subida:\n")
cat("Media:", media_subida, "\n")
cat("Moda:", moda_subida, "\n")
cat("Desviación estándar:", desviacion_subida, "\n")
# Handle empty download speed data
if (all(is.na(velocidad_bajada))) {
cat("\nNo hay datos de Velocidad de Bajada.")
} else {
# Cálculos estadísticos de bajada
media_bajada <- mean(velocidad_bajada, na.rm = TRUE)
moda_bajada <- Mode(velocidad_bajada)
desviacion_bajada <- sd(velocidad_bajada, na.rm = TRUE)
# Rangos de velocidad de bajada
rango_min_bajada <- floor(min(velocidad_bajada) / 10) * 10
rango_max_bajada <- ceiling(max(velocidad_bajada) / 10) * 10
rangos_bajada <- seq(rango_min_bajada, rango_max_bajada, by = 10)
# Tabla de frecuencia de velocidad de bajada
tabla_bajada <- data.frame(Rango_de_Velocidad = cut(velocidad_bajada, breaks = rangos_bajada, include.lowest = TRUE)) %>%
count(Rango_de_Velocidad) %>%
arrange(Rango_de_Velocidad) %>%
rename(Frecuencia = n) %>%
mutate(Frecuencia_Relativa = Frecuencia / sum(Frecuencia),
Frecuencia_Acumulada = cumsum(Frecuencia))
# Convertir los intervalos de bajada a formato de cadena
tabla_bajada$Rango_de_Velocidad <- as.character(tabla_bajada$Rango_de_Velocidad)
# Gráfica de frecuencia de velocidad de bajada
plt_bajada <- ggplot(tabla_bajada, aes(x = Rango_de_Velocidad, y = Frecuencia)) +
geom_bar(stat = "identity", width = 0.8) +
labs(x = "Rango de Velocidad de bajada (Mbps)", y = "Frecuencia", title = "Frecuencia de Velocidad de Bajada") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
coord_flip()
# Resultados de bajada
cat("\nEstadísticas de Velocidad de Bajada:\n")
cat("Media:", media_bajada, "\n")
cat("Moda:", moda_bajada, "\n")
cat("Desviación estándar:", desviacion_bajada, "\n")
}
plt_subida
plt_bajada
source("~/.active-rstudio-document", echo=TRUE)
install.packages("readr")
source("~/.active-rstudio-document", echo=TRUE)
# Definir la tolerancia como una desviación estándar de la media
tolerancia_subida <- sd(velocidad_subida, na.rm = TRUE)
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("tu_archivo.csv")
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener los vectores de velocidad de subida y bajada
velocidad_subida <- datos$up
velocidad_bajada <- datos$down
# Definir la tolerancia como una desviación estándar de la media
tolerancia_subida <- sd(velocidad_subida, na.rm = TRUE)
tolerancia_bajada <- sd(velocidad_bajada, na.rm = TRUE)
# Calcular el número de velocidades dentro y fuera de tolerancia
dentro_tolerancia_subida <- sum(abs(velocidad_subida - mean(velocidad_subida, na.rm = TRUE)) <= tolerancia_subida)
fuera_tolerancia_subida <- sum(abs(velocidad_subida - mean(velocidad_subida, na.rm = TRUE)) > tolerancia_subida)
dentro_tolerancia_bajada <- sum(abs(velocidad_bajada - mean(velocidad_bajada, na.rm = TRUE)) <= tolerancia_bajada)
fuera_tolerancia_bajada <- sum(abs(velocidad_bajada - mean(velocidad_bajada, na.rm = TRUE)) > tolerancia_bajada)
# Calcular las probabilidades
p_subida <- dentro_tolerancia_subida / length(velocidad_subida)
q_subida <- fuera_tolerancia_subida / length(velocidad_subida)
p_bajada <- dentro_tolerancia_bajada / length(velocidad_bajada)
q_bajada <- fuera_tolerancia_bajada / length(velocidad_bajada)
# Imprimir los resultados
cat("Probabilidad de velocidades de subida dentro de tolerancia:", p_subida, "\n")
cat("Probabilidad de velocidades de subida fuera de tolerancia:", q_subida, "\n")
cat("Probabilidad de velocidades de bajada dentro de tolerancia:", p_bajada, "\n")
cat("Probabilidad de velocidades de bajada fuera de tolerancia:", q_bajada, "\n")
source("~/.active-rstudio-document", echo=TRUE)
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener los vectores de velocidad de subida y bajada
velocidad_subida <- datos$up
velocidad_bajada <- datos$down
# Definir la tolerancia como una desviación estándar de la media
tolerancia_subida <- sd(velocidad_subida, na.rm = TRUE)
tolerancia_bajada <- sd(velocidad_bajada, na.rm = TRUE)
# Calcular el número de velocidades dentro y fuera de tolerancia
dentro_tolerancia_subida <- sum(abs(velocidad_subida - mean(velocidad_subida, na.rm = TRUE)) <= tolerancia_subida)
fuera_tolerancia_subida <- sum(abs(velocidad_subida - mean(velocidad_subida, na.rm = TRUE)) > tolerancia_subida)
dentro_tolerancia_bajada <- sum(abs(velocidad_bajada - mean(velocidad_bajada, na.rm = TRUE)) <= tolerancia_bajada)
fuera_tolerancia_bajada <- sum(abs(velocidad_bajada - mean(velocidad_bajada, na.rm = TRUE)) > tolerancia_bajada)
# Calcular las probabilidades
p_subida <- dentro_tolerancia_subida / length(velocidad_subida)
q_subida <- fuera_tolerancia_subida / length(velocidad_subida)
p_bajada <- dentro_tolerancia_bajada / length(velocidad_bajada)
q_bajada <- fuera_tolerancia_bajada / length(velocidad_bajada)
# Imprimir los resultados
cat("Probabilidad de velocidades de subida dentro de tolerancia:", p_subida, "\n")
cat("Probabilidad de velocidades de subida fuera de tolerancia:", q_subida, "\n")
cat("Probabilidad de velocidades de bajada dentro de tolerancia:", p_bajada, "\n")
cat("Probabilidad de velocidades de bajada fuera de tolerancia:", q_bajada, "\n")
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener los vectores de velocidad de subida y bajada
velocidad_subida <- datos$up
velocidad_bajada <- datos$down
# Definir la tolerancia como una desviación estándar de la media
tolerancia_subida <- sd(velocidad_subida, na.rm = TRUE)
tolerancia_bajada <- sd(velocidad_bajada, na.rm = TRUE)
# Calcular el número de velocidades dentro y fuera de tolerancia
dentro_tolerancia_subida <- sum(abs(velocidad_subida - mean(velocidad_subida, na.rm = TRUE)) <= tolerancia_subida)
fuera_tolerancia_subida <- sum(abs(velocidad_subida - mean(velocidad_subida, na.rm = TRUE)) > tolerancia_subida)
dentro_tolerancia_bajada <- sum(abs(velocidad_bajada - mean(velocidad_bajada, na.rm = TRUE)) <= tolerancia_bajada)
fuera_tolerancia_bajada <- sum(abs(velocidad_bajada - mean(velocidad_bajada, na.rm = TRUE)) > tolerancia_bajada)
# Calcular las probabilidades
p_subida <- dentro_tolerancia_subida / length(velocidad_subida)
q_subida <- fuera_tolerancia_subida / length(velocidad_subida)
p_bajada <- dentro_tolerancia_bajada / length(velocidad_bajada)
q_bajada <- fuera_tolerancia_bajada / length(velocidad_bajada)
# Imprimir los resultados
cat("Probabilidad de velocidades de subida dentro de tolerancia: P1", p_subida, "\n")
cat("Probabilidad de velocidades de subida fuera de tolerancia: Q1", q_subida, "\n")
cat("Probabilidad de velocidades de bajada dentro de tolerancia:P2", p_bajada, "\n")
cat("Probabilidad de velocidades de bajada fuera de tolerancia: Q2", q_bajada, "\n")
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener los vectores de velocidad de subida y bajada
velocidad_subida <- datos$up
velocidad_bajada <- datos$down
# Definir la tolerancia como una desviación estándar de la media
tolerancia_subida <- sd(velocidad_subida, na.rm = TRUE)
tolerancia_bajada <- sd(velocidad_bajada, na.rm = TRUE)
# Calcular el número de velocidades dentro y fuera de tolerancia
dentro_tolerancia_subida <- sum(abs(velocidad_subida - mean(velocidad_subida, na.rm = TRUE)) <= tolerancia_subida)
fuera_tolerancia_subida <- sum(abs(velocidad_subida - mean(velocidad_subida, na.rm = TRUE)) > tolerancia_subida)
dentro_tolerancia_bajada <- sum(abs(velocidad_bajada - mean(velocidad_bajada, na.rm = TRUE)) <= tolerancia_bajada)
fuera_tolerancia_bajada <- sum(abs(velocidad_bajada - mean(velocidad_bajada, na.rm = TRUE)) > tolerancia_bajada)
# Calcular las probabilidades
p_subida <- dentro_tolerancia_subida / length(velocidad_subida)
q_subida <- fuera_tolerancia_subida / length(velocidad_subida)
p_bajada <- dentro_tolerancia_bajada / length(velocidad_bajada)
q_bajada <- fuera_tolerancia_bajada / length(velocidad_bajada)
# Imprimir los resultados
cat("Probabilidad de velocidades de subida dentro de tolerancia P1:", p_subida, "\n")
cat("Probabilidad de velocidades de subida fuera de tolerancia Q1:", q_subida, "\n")
cat("Probabilidad de velocidades de bajada dentro de tolerancia P2: ", p_bajada, "\n")
cat("Probabilidad de velocidades de bajada fuera de tolerancia Q2: ", q_bajada, "\n")
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener los vectores de velocidad de subida y bajada
velocidad_subida <- datos$up
velocidad_bajada <- datos$down
# Definir la tolerancia como una desviación estándar de la media
tolerancia_subida <- sd(velocidad_subida, na.rm = TRUE)
tolerancia_bajada <- sd(velocidad_bajada, na.rm = TRUE)
# Calcular el número de velocidades dentro y fuera de tolerancia
dentro_tolerancia_subida <- sum(abs(velocidad_subida - mean(velocidad_subida, na.rm = TRUE)) <= tolerancia_subida)
fuera_tolerancia_subida <- sum(abs(velocidad_subida - mean(velocidad_subida, na.rm = TRUE)) > tolerancia_subida)
dentro_tolerancia_bajada <- sum(abs(velocidad_bajada - mean(velocidad_bajada, na.rm = TRUE)) <= tolerancia_bajada)
fuera_tolerancia_bajada <- sum(abs(velocidad_bajada - mean(velocidad_bajada, na.rm = TRUE)) > tolerancia_bajada)
# Calcular las probabilidades
p_subida <- dentro_tolerancia_subida / length(velocidad_subida)
q_subida <- fuera_tolerancia_subida / length(velocidad_subida)
p_bajada <- dentro_tolerancia_bajada / length(velocidad_bajada)
q_bajada <- fuera_tolerancia_bajada / length(velocidad_bajada)
# Imprimir los resultados
cat("Probabilidad de velocidades de subida dentro de tolerancia P1:", p_subida, "\n")
cat("Probabilidad de velocidades de subida fuera de tolerancia Q1:", q_subida, "\n")
cat("Probabilidad de velocidades de bajada dentro de tolerancia P2: ", p_bajada, "\n")
cat("Probabilidad de velocidades de bajada fuera de tolerancia Q2: ", q_bajada, "\n")
source("C:/Users/eubgo/Desktop/SpeedUP/PtolearanciaVelocidades.R", echo=TRUE)
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener el vector de distancias
distancia <- datos$distancia
# Definir la tolerancia como una desviación estándar de la media
tolerancia <- sd(distancia, na.rm = TRUE)
# Calcular el número de distancias dentro y fuera de tolerancia
dentro_tolerancia <- sum(abs(distancia - mean(distancia, na.rm = TRUE)) <= tolerancia)
fuera_tolerancia <- sum(abs(distancia - mean(distancia, na.rm = TRUE)) > tolerancia)
# Calcular las probabilidades
p_distancia <- dentro_tolerancia / length(distancia)
q_distancia <- fuera_tolerancia / length(distancia)
# Imprimir los resultados
cat("Probabilidad de distancias dentro de tolerancia P:", p_distancia, "\n")
cat("Probabilidad de distancias fuera de tolerancia Q:", q_distancia, "\n")
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener los vectores de velocidad de subida y bajada
velocidad_subida <- datos$up
velocidad_bajada <- datos$down
# Definir la tolerancia como una desviación estándar de la media
tolerancia_subida <- sd(velocidad_subida, na.rm = TRUE)
tolerancia_bajada <- sd(velocidad_bajada, na.rm = TRUE)
# Calcular el número de velocidades dentro y fuera de tolerancia
dentro_tolerancia_subida <- sum(abs(velocidad_subida - mean(velocidad_subida, na.rm = TRUE)) <= tolerancia_subida)
fuera_tolerancia_subida <- sum(abs(velocidad_subida - mean(velocidad_subida, na.rm = TRUE)) > tolerancia_subida)
dentro_tolerancia_bajada <- sum(abs(velocidad_bajada - mean(velocidad_bajada, na.rm = TRUE)) <= tolerancia_bajada)
fuera_tolerancia_bajada <- sum(abs(velocidad_bajada - mean(velocidad_bajada, na.rm = TRUE)) > tolerancia_bajada)
# Calcular las probabilidades
p_subida <- dentro_tolerancia_subida / length(velocidad_subida)
q_subida <- fuera_tolerancia_subida / length(velocidad_subida)
p_bajada <- dentro_tolerancia_bajada / length(velocidad_bajada)
q_bajada <- fuera_tolerancia_bajada / length(velocidad_bajada)
cat("Media subida --> " , mean(velocidad_subida, na.rm = TRUE))
cat("Desviación subida--> ", sd(velocidad_subida, na.rm = TRUE))
cat("Media bajada --> " , mean(velocidad_bajada, na.rm = TRUE))
cat("Desviación bajada --> ",sd(velocidad_bajada, na.rm = TRUE))
# Imprimir los resultados
cat("Probabilidad de velocidades de subida dentro de tolerancia P1:", p_subida, "\n")
cat("Probabilidad de velocidades de subida fuera de tolerancia Q1:", q_subida, "\n")
cat("Probabilidad de velocidades de bajada dentro de tolerancia P2: ", p_bajada, "\n")
cat("Probabilidad de velocidades de bajada fuera de tolerancia Q2: ", q_bajada, "\n")
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener el vector de distancias
distancia <- datos$distancia
# Definir la tolerancia como una desviación estándar de la media
tolerancia <- sd(distancia, na.rm = TRUE)
# Calcular el número de distancias dentro y fuera de tolerancia
dentro_tolerancia <- sum(abs(distancia - mean(distancia, na.rm = TRUE)) <= tolerancia)
fuera_tolerancia <- sum(abs(distancia - mean(distancia, na.rm = TRUE)) > tolerancia)
# Calcular las probabilidades
p_distancia <- dentro_tolerancia / length(distancia)
q_distancia <- fuera_tolerancia / length(distancia)
# Imprimir los resultados
cat("Probabilidad de distancias dentro de tolerancia P:", p_distancia, "\n")
cat("Probabilidad de distancias fuera de tolerancia Q:", q_distancia, "\n")
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener el vector de distancias
distancia <- datos$distancia
# Definir la tolerancia como una desviación estándar de la media
tolerancia <- sd(distancia, na.rm = TRUE)
# Calcular el número de distancias dentro y fuera de tolerancia
dentro_tolerancia <- sum(abs(distancia - mean(distancia, na.rm = TRUE)) <= tolerancia)
fuera_tolerancia <- sum(abs(distancia - mean(distancia, na.rm = TRUE)) > tolerancia)
# Calcular las probabilidades
p_distancia <- dentro_tolerancia / length(distancia)
q_distancia <- fuera_tolerancia / length(distancia)
# Imprimir los resultados
cat("Probabilidad de distancias dentro de tolerancia P:", p_distancia, "\n")
cat("Probabilidad de distancias fuera de tolerancia Q:", q_distancia, "\n")
source("C:/Users/eubgo/Desktop/SpeedUP/PtolearanciaDistancia.R", echo=TRUE)
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener el vector de distancias
distancia <- datos$distancia
# Definir la tolerancia como una desviación estándar de la media
tolerancia <- sd(distancia, na.rm = TRUE)
# Calcular el número de distancias dentro y fuera de tolerancia
dentro_tolerancia <- sum(abs(distancia - mean(distancia, na.rm = TRUE)) <= tolerancia)
fuera_tolerancia <- sum(abs(distancia - mean(distancia, na.rm = TRUE)) > tolerancia)
cat("Media distancia --> ",  mean(distancia, na.rm = TRUE))
cat("Desviación distancia --> ", sd(distancia, na.rm = TRUE))
# Calcular las probabilidades
p_distancia <- dentro_tolerancia / length(distancia)
q_distancia <- fuera_tolerancia / length(distancia)
# Imprimir los resultados
cat("Probabilidad de distancias dentro de tolerancia P:", p_distancia, "\n")
cat("Probabilidad de distancias fuera de tolerancia Q:", q_distancia, "\n")
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener los vectores de velocidad de subida y bajada
velocidad_subida <- datos$up
velocidad_bajada <- datos$down
# Calcular la media y desviación estándar de las velocidades de subida
media_subida <- mean(velocidad_subida, na.rm = TRUE)
desviacion_subida <- sd(velocidad_subida, na.rm = TRUE)
# Calcular la media y desviación estándar de las velocidades de bajada
media_bajada <- mean(velocidad_bajada, na.rm = TRUE)
desviacion_bajada <- sd(velocidad_bajada, na.rm = TRUE)
cat("Media de velocidades de subida:", media_subida, "\n")
cat("Desviación estándar de velocidades de subida:", desviacion_subida, "\n")
cat("Media de velocidades de bajada:", media_bajada, "\n")
cat("Desviación estándar de velocidades de bajada:", desviacion_bajada, "\n")
# Definir las tolerancias como múltiplos de la desviación estándar
multiplo_tolerancia <- 2
tolerancia_subida <- multiplo_tolerancia * desviacion_subida
tolerancia_bajada <- multiplo_tolerancia * desviacion_bajada
# Calcular las probabilidades utilizando la función pnorm
probabilidad_dentro_tolerancia_subida <- pnorm(media_subida + tolerancia_subida, mean = media_subida, sd = desviacion_subida) - pnorm(media_subida - tolerancia_subida, mean = media_subida, sd = desviacion_subida)
probabilidad_fuera_tolerancia_subida <- 1 - probabilidad_dentro_tolerancia_subida
probabilidad_dentro_tolerancia_bajada <- pnorm(media_bajada + tolerancia_bajada, mean = media_bajada, sd = desviacion_bajada) - pnorm(media_bajada - tolerancia_bajada, mean = media_bajada, sd = desviacion_bajada)
probabilidad_fuera_tolerancia_bajada <- 1 - probabilidad_dentro_tolerancia_bajada
# Imprimir los resultados
cat("Probabilidad de velocidades de subida dentro de tolerancia P1:", probabilidad_dentro_tolerancia_subida, "\n")
cat("Probabilidad de velocidades de subida fuera de tolerancia Q1:", probabilidad_fuera_tolerancia_subida, "\n")
cat("Probabilidad de velocidades de bajada dentro de tolerancia P2: ", probabilidad_dentro_tolerancia_bajada, "\n")
cat("Probabilidad de velocidades de bajada fuera de tolerancia Q2: ", probabilidad_fuera_tolerancia_bajada, "\n")
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener los vectores de velocidad de subida y bajada
velocidad_subida <- datos$up
velocidad_bajada <- datos$down
# Calcular la media y desviación estándar de las velocidades de subida
media_subida <- mean(velocidad_subida, na.rm = TRUE)
desviacion_subida <- sd(velocidad_subida, na.rm = TRUE)
# Calcular la media y desviación estándar de las velocidades de bajada
media_bajada <- mean(velocidad_bajada, na.rm = TRUE)
desviacion_bajada <- sd(velocidad_bajada, na.rm = TRUE)
cat("Media de velocidades de subida:", media_subida, "\n")
cat("Desviación estándar de velocidades de subida:", desviacion_subida, "\n")
cat("Media de velocidades de bajada:", media_bajada, "\n")
cat("Desviación estándar de velocidades de bajada:", desviacion_bajada, "\n")
# Definir las tolerancias como múltiplos de la desviación estándar
multiplo_tolerancia <- 1
tolerancia_subida <- multiplo_tolerancia * desviacion_subida
tolerancia_bajada <- multiplo_tolerancia * desviacion_bajada
# Calcular las probabilidades utilizando la función pnorm
probabilidad_dentro_tolerancia_subida <- pnorm(media_subida + tolerancia_subida, mean = media_subida, sd = desviacion_subida) - pnorm(media_subida - tolerancia_subida, mean = media_subida, sd = desviacion_subida)
probabilidad_fuera_tolerancia_subida <- 1 - probabilidad_dentro_tolerancia_subida
probabilidad_dentro_tolerancia_bajada <- pnorm(media_bajada + tolerancia_bajada, mean = media_bajada, sd = desviacion_bajada) - pnorm(media_bajada - tolerancia_bajada, mean = media_bajada, sd = desviacion_bajada)
probabilidad_fuera_tolerancia_bajada <- 1 - probabilidad_dentro_tolerancia_bajada
# Imprimir los resultados
cat("Probabilidad de velocidades de subida dentro de tolerancia P1:", probabilidad_dentro_tolerancia_subida, "\n")
cat("Probabilidad de velocidades de subida fuera de tolerancia Q1:", probabilidad_fuera_tolerancia_subida, "\n")
cat("Probabilidad de velocidades de bajada dentro de tolerancia P2: ", probabilidad_dentro_tolerancia_bajada, "\n")
cat("Probabilidad de velocidades de bajada fuera de tolerancia Q2: ", probabilidad_fuera_tolerancia_bajada, "\n")
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener los vectores de velocidad de subida y bajada
velocidad_subida <- datos$up
velocidad_bajada <- datos$down
# Calcular la media y desviación estándar de las velocidades de subida
media_subida <- mean(velocidad_subida, na.rm = TRUE)
desviacion_subida <- sd(velocidad_subida, na.rm = TRUE)
# Calcular la media y desviación estándar de las velocidades de bajada
media_bajada <- mean(velocidad_bajada, na.rm = TRUE)
desviacion_bajada <- sd(velocidad_bajada, na.rm = TRUE)
cat("Media de velocidades de subida:", media_subida, "\n")
cat("Desviación estándar de velocidades de subida:", desviacion_subida, "\n")
cat("Media de velocidades de bajada:", media_bajada, "\n")
cat("Desviación estándar de velocidades de bajada:", desviacion_bajada, "\n")
# Definir las tolerancias como múltiplos de la desviación estándar
multiplo_tolerancia <- 2
tolerancia_subida <- multiplo_tolerancia * desviacion_subida
tolerancia_bajada <- multiplo_tolerancia * desviacion_bajada
# Calcular las probabilidades utilizando la función pnorm
probabilidad_dentro_tolerancia_subida <- pnorm(media_subida + tolerancia_subida, mean = media_subida, sd = desviacion_subida) - pnorm(media_subida - tolerancia_subida, mean = media_subida, sd = desviacion_subida)
probabilidad_fuera_tolerancia_subida <- 1 - probabilidad_dentro_tolerancia_subida
probabilidad_dentro_tolerancia_bajada <- pnorm(media_bajada + tolerancia_bajada, mean = media_bajada, sd = desviacion_bajada) - pnorm(media_bajada - tolerancia_bajada, mean = media_bajada, sd = desviacion_bajada)
probabilidad_fuera_tolerancia_bajada <- 1 - probabilidad_dentro_tolerancia_bajada
# Imprimir los resultados
cat("Probabilidad de velocidades de subida dentro de tolerancia P1:", probabilidad_dentro_tolerancia_subida, "\n")
cat("Probabilidad de velocidades de subida fuera de tolerancia Q1:", probabilidad_fuera_tolerancia_subida, "\n")
cat("Probabilidad de velocidades de bajada dentro de tolerancia P2: ", probabilidad_dentro_tolerancia_bajada, "\n")
cat("Probabilidad de velocidades de bajada fuera de tolerancia Q2: ", probabilidad_fuera_tolerancia_bajada, "\n")
source("~/.active-rstudio-document", echo=TRUE)
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener los vectores de velocidad de subida y bajada
velocidad_subida <- datos$up
velocidad_bajada <- datos$down
# Calcular la media y desviación estándar de las velocidades de subida
media_subida <- mean(velocidad_subida, na.rm = TRUE)
desviacion_subida <- sd(velocidad_subida, na.rm = TRUE)
# Calcular la media y desviación estándar de las velocidades de bajada
media_bajada <- mean(velocidad_bajada, na.rm = TRUE)
desviacion_bajada <- sd(velocidad_bajada, na.rm = TRUE)
cat("Media de velocidades de subida:", media_subida, "\n")
cat("Desviación estándar de velocidades de subida:", desviacion_subida, "\n")
cat("Media de velocidades de bajada:", media_bajada, "\n")
cat("Desviación estándar de velocidades de bajada:", desviacion_bajada, "\n")
# Definir las tolerancias como múltiplos de la desviación estándar
multiplo_tolerancia <- 1
tolerancia_subida <- multiplo_tolerancia * desviacion_subida
tolerancia_bajada <- multiplo_tolerancia * desviacion_bajada
intentos = 100
queridos = 15
# Calcular la probabilidad de tener 15 mediciones fuera de tolerancia en 100 intentos
probabilidad_medicion_fuera_tolerancia <- dbinom(queridos, size = intentos, prob = probabilidad_fuera_tolerancia_subida)
cat("Probabilidad de tener 15 mediciones fuera de tolerancia en 100 intentos:", probabilidad_medicion_fuera_tolerancia, "\n")
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener los vectores de velocidad de subida y bajada
velocidad_subida <- datos$up
velocidad_bajada <- datos$down
# Calcular la media y desviación estándar de las velocidades de subida
media_subida <- mean(velocidad_subida, na.rm = TRUE)
desviacion_subida <- sd(velocidad_subida, na.rm = TRUE)
# Calcular la media y desviación estándar de las velocidades de bajada
media_bajada <- mean(velocidad_bajada, na.rm = TRUE)
desviacion_bajada <- sd(velocidad_bajada, na.rm = TRUE)
cat("Media de velocidades de subida:", media_subida, "\n")
cat("Desviación estándar de velocidades de subida:", desviacion_subida, "\n")
cat("Media de velocidades de bajada:", media_bajada, "\n")
cat("Desviación estándar de velocidades de bajada:", desviacion_bajada, "\n")
# Definir las tolerancias como múltiplos de la desviación estándar
multiplo_tolerancia <- 1
tolerancia_subida <- multiplo_tolerancia * desviacion_subida
tolerancia_bajada <- multiplo_tolerancia * desviacion_bajada
intentos <- 100
queridos <- 15
# Calcular la probabilidad de tener 15 mediciones fuera de tolerancia en 100 intentos
probabilidad_medicion_fuera_tolerancia_subida <- dbinom(queridos, size = intentos, prob = probabilidad_fuera_tolerancia_subida)
cat("Probabilidad de tener 15 mediciones fuera de tolerancia en 100 intentos (subida):", probabilidad_medicion_fuera_tolerancia_subida, "\n")
probabilidad_medicion_fuera_tolerancia_bajada <- dbinom(queridos, size = intentos, prob = probabilidad_fuera_tolerancia_bajada)
cat("Probabilidad de tener 15 mediciones fuera de tolerancia en 100 intentos (bajada):", probabilidad_medicion_fuera_tolerancia_bajada, "\n")
# Cargar el paquete necesario para leer archivos CSV
library(readr)
# Leer el archivo CSV
datos <- read_csv("resultados.csv")
# Obtener los vectores de velocidad de subida y bajada
velocidad_subida <- datos$up
velocidad_bajada <- datos$down
# Obtener el vector de distancia
distancia <- datos$distancia
# Calcular la media y desviación estándar de las velocidades de subida
media_subida <- mean(velocidad_subida, na.rm = TRUE)
desviacion_subida <- sd(velocidad_subida, na.rm = TRUE)
# Calcular la media y desviación estándar de las velocidades de bajada
media_bajada <- mean(velocidad_bajada, na.rm = TRUE)
desviacion_bajada <- sd(velocidad_bajada, na.rm = TRUE)
# Calcular la media y desviación estándar de la distancia
media_distancia <- mean(distancia, na.rm = TRUE)
desviacion_distancia <- sd(distancia, na.rm = TRUE)
cat("Media de velocidades de subida:", media_subida, "\n")
cat("Desviación estándar de velocidades de subida:", desviacion_subida, "\n")
cat("Media de velocidades de bajada:", media_bajada, "\n")
cat("Desviación estándar de velocidades de bajada:", desviacion_bajada, "\n")
cat("Media de distancia:", media_distancia, "\n")
cat("Desviación estándar de distancia:", desviacion_distancia, "\n")
# Definir las tolerancias como múltiplos de la desviación estándar
multiplo_tolerancia <- 1
tolerancia_subida <- multiplo_tolerancia * desviacion_subida
tolerancia_bajada <- multiplo_tolerancia * desviacion_bajada
tolerancia_distancia <- multiplo_tolerancia * desviacion_distancia
probabilidad_dentro_tolerancia_subida <- pnorm(media_subida + tolerancia_subida, mean = media_subida, sd = desviacion_subida) - pnorm(media_subida - tolerancia_subida, mean = media_subida, sd = desviacion_subida)
probabilidad_fuera_tolerancia_subida <- 1 - probabilidad_dentro_tolerancia_subida
probabilidad_dentro_tolerancia_bajada <- pnorm(media_bajada + tolerancia_bajada, mean = media_bajada, sd = desviacion_bajada) - pnorm(media_bajada - tolerancia_bajada, mean = media_bajada, sd = desviacion_bajada)
probabilidad_fuera_tolerancia_bajada <- 1 - probabilidad_dentro_tolerancia_bajada
probabilidad_dentro_tolerancia_distancia <- pnorm(media_distancia + tolerancia_distancia, mean = media_distancia, sd = desviacion_distancia) - pnorm(media_distancia - tolerancia_distancia, mean = media_distancia, sd = desviacion_distancia)
probabilidad_fuera_tolerancia_distancia <- 1 - probabilidad_dentro_tolerancia_distancia
intentos <- 100
queridos <- 15
# Calcular la probabilidad de tener 15 mediciones fuera de tolerancia en 100 intentos
probabilidad_medicion_fuera_tolerancia_subida <- dbinom(queridos, size = intentos, prob = probabilidad_fuera_tolerancia_subida)
cat("Probabilidad de tener 15 mediciones fuera de tolerancia en 100 intentos (subida):", probabilidad_medicion_fuera_tolerancia_subida, "\n")
probabilidad_medicion_fuera_tolerancia_bajada <- dbinom(queridos, size = intentos, prob = probabilidad_fuera_tolerancia_bajada)
cat("Probabilidad de tener 15 mediciones fuera de tolerancia en 100 intentos (bajada):", probabilidad_medicion_fuera_tolerancia_bajada, "\n")
probabilidad_medicion_fuera_tolerancia_distancia <- dbinom(queridos, size = intentos, prob =probabilidad_fuera_tolerancia_distancia)
cat("Probabilidad de tener 15 mediciones fuera de tolerancia en 100 intentos (distancia):", probabilidad_medicion_fuera_tolerancia_distancia, "\n")
source("C:/Users/eubgo/Desktop/SpeedUP/PBinom.R")
source("C:/Users/eubgo/Desktop/SpeedUP/PGeom.R")
source("~/.active-rstudio-document")
source("C:/Users/eubgo/Desktop/SpeedUP/pBinomNeg.R")
